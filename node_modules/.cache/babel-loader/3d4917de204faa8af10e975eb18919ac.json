{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { updateMachineConfig } from './machine.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n\n  const WebSocketContext = /*#__PURE__*/createContext(null);\n  let socket = null;\n  let ws;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!socket) {\n      //@ts-ignore\n      socket = io('http://localhost:5000');\n      socket.on('machineUpdater', data => {\n        const payload = data.map(c => ({\n          id: c.id,\n          name: c.equipmentHeader.OEMName,\n          fuelUsed: c.fuelUsed.fuelConsumed\n        }));\n        dispatch(updateMachineConfig(payload));\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WebSocketProvider, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = WebSocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx"],"names":["React","createContext","useEffect","io","useDispatch","updateMachineConfig","WebSocketProvider","children","WebSocketContext","socket","ws","dispatch","on","data","payload","map","c","id","name","equipmentHeader","OEMName","fuelUsed","fuelConsumed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,mBAApC;;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACtD,QAAMC,gBAAgB,gBAAGP,aAAa,CAAM,IAAN,CAAtC;AACA,MAAIQ,MAAW,GAAG,IAAlB;AACA,MAAIC,EAAJ;AAEA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,MAAL,EAAa;AACX;AACAA,MAAAA,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAX;AAEAM,MAAAA,MAAM,CAACG,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAA2B;AACrD,cAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAAUC,CAAD,KAAQ;AAC/BC,UAAAA,EAAE,EAAED,CAAC,CAACC,EADyB;AAE/BC,UAAAA,IAAI,EAAEF,CAAC,CAACG,eAAF,CAAkBC,OAFO;AAG/BC,UAAAA,QAAQ,EAAEL,CAAC,CAACK,QAAF,CAAWC;AAHU,SAAR,CAAT,CAAhB;AAKAX,QAAAA,QAAQ,CAACN,mBAAmB,CAACS,OAAD,CAApB,CAAR;AACD,OAPD;AAQD;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBAAO,QAAC,gBAAD,CAAkB,QAAlB;AAAA,cAA4BP;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBM;;GAAMD,iB;UAKMF,W;;;KALNE,iB","sourcesContent":["import React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { updateMachineConfig } from './machine.actions';\nimport { MachineConfig } from './machine.types';\n\nexport const WebSocketProvider = ({ children }: any) => {\n  const WebSocketContext = createContext<any>(null);\n  let socket: any = null;\n  let ws;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!socket) {\n      //@ts-ignore\n      socket = io('http://localhost:5000');\n\n      socket.on('machineUpdater', (data: MachineConfig[]) => {\n        const payload = data.map((c) => ({\n          id: c.id,\n          name: c.equipmentHeader.OEMName,\n          fuelUsed: c.fuelUsed.fuelConsumed,\n        }));\n        dispatch(updateMachineConfig(payload));\n      });\n    }\n  }, []);\n\n  return <WebSocketContext.Provider>{children}</WebSocketContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}