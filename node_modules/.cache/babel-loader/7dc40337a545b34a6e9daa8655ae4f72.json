{"ast":null,"code":"import openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:8000');\n\nfunction subscribeToTimer(cb) {\n  socket.on('timer', timestamp => {\n    debugger;\n    return cb(null, timestamp);\n  });\n  setTimeout(() => {\n    socket.emit('timer', new Date());\n  }, 12000);\n}\n\nexport { subscribeToTimer };","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/client.ts"],"names":["openSocket","socket","subscribeToTimer","cb","on","timestamp","setTimeout","emit","Date"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,MAAMC,MAAM,GAAGD,UAAU,CAAC,uBAAD,CAAzB;;AAEA,SAASE,gBAAT,CAA0BC,EAA1B,EAA+D;AAC3DF,EAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmBC,SAAS,IAAG;AAAC;AAAS,WAAOF,EAAE,CAAC,IAAD,EAAOE,SAAP,CAAT;AAA2B,GAApE;AACAC,EAAAA,UAAU,CAAC,MAAK;AAChBL,IAAAA,MAAM,CAACM,IAAP,CAAY,OAAZ,EAAqB,IAAIC,IAAJ,EAArB;AAEH,GAHa,EAGX,KAHW,CAAV;AAID;;AACD,SAASN,gBAAT","sourcesContent":["import openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:8000');\n\nfunction subscribeToTimer(cb: (arg0: null, arg1: any) => void) {\n    socket.on('timer', timestamp =>{debugger;return cb(null, timestamp)});\n    setTimeout(()=> {\n    socket.emit('timer', new Date())\n\n}, 12000)\n  }\n  export { subscribeToTimer };"]},"metadata":{},"sourceType":"module"}