{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/containers/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlertedMachines, getMachines } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SideBar from 'components/SideBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machines = useSelector(getMachines);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!showAlert && alertedMachines.length) {\n      setShowAlert(true);\n    }\n  }, [showAlert, alertedMachines]);\n  return /*#__PURE__*/_jsxDEV(Styled.Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Heading, {\n      children: \"Telematic Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Container, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        data: machines,\n        setPageNumber: setPageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n        alertedMachines: alertedMachines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"yMEYQxaFRNDL5/0d31oJ+o3FWIQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Dashboard;\nconst Styled = {\n  Heading: styled.h2`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `,\n  Full: styled.div`\n    width: 100%;\n  `,\n  Dashboard: styled.div`\n    padding: ${props => props.theme.spacings.xl};\n  `,\n  Container: styled.div`\n    background-color: ${props => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `\n};\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/containers/Dashboard.tsx"],"names":["useDispatch","useSelector","getAlertedMachines","getMachines","Table","useEffect","useState","styled","SideBar","Dashboard","showAlert","setShowAlert","pageNumber","setPageNumber","alertedMachines","machines","dispatch","length","Styled","Heading","h2","Full","div","props","theme","spacings","xl","Container","colors","white"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,kBADF,EAEEC,WAFF,QAGO,iCAHP;AAIA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,CAAT,CAA5C;AAEA,QAAMQ,eAAe,GAAGb,WAAW,CAACC,kBAAD,CAAnC;AACA,QAAMa,QAAQ,GAAGd,WAAW,CAACE,WAAD,CAA5B;AAEA,QAAMa,QAAQ,GAAGhB,WAAW,EAA5B;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,SAAD,IAAcI,eAAe,CAACG,MAAlC,EAA0C;AACxCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACD,SAAD,EAAYI,eAAZ,CAJM,CAAT;AAMA,sBACE,QAAC,MAAD,CAAQ,SAAR;AAAA,4BACE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD,CAAQ,SAAR;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEC,QAAb;AAAuB,QAAA,aAAa,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,eAAe,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxBD;;GAAML,S;UAIoBR,W,EACPA,W,EAEAD,W;;;KAPbS,S;AA0BN,MAAMS,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAEZ,MAAM,CAACa,EAAG;AACrB;AACA;AACA;AACA,GALe;AAMbC,EAAAA,IAAI,EAAEd,MAAM,CAACe,GAAI;AACnB;AACA,GARe;AASbb,EAAAA,SAAS,EAAEF,MAAM,CAACe,GAAI;AACxB,eAAgBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBC,EAAG;AAClD,GAXe;AAYbC,EAAAA,SAAS,EAAEpB,MAAM,CAACe,GAAI;AACxB,wBAAyBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA;AACA;AAjBe,CAAf;AAoBA,eAAepB,SAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAlertedMachines,\n  getMachines,\n} from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from '../components/Modal';\nimport styled from 'styled-components';\nimport { removeAlertedMachines } from 'store/machine/machine.actions';\nimport MachineBlock from '../components/MachineBlock';\nimport SideBar from 'components/SideBar';\n\nconst Dashboard = () => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machines = useSelector(getMachines);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!showAlert && alertedMachines.length) {\n      setShowAlert(true);\n    }\n  }, [showAlert, alertedMachines]);\n\n  return (\n    <Styled.Dashboard>\n      <Styled.Heading>Telematic Dashboard</Styled.Heading>\n      <Styled.Container>\n        <Table data={machines} setPageNumber={setPageNumber} />\n        <SideBar alertedMachines={alertedMachines} />\n      </Styled.Container>\n    </Styled.Dashboard>\n  );\n};\n\nconst Styled = {\n  Heading: styled.h2`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `,\n  Full: styled.div`\n    width: 100%;\n  `,\n  Dashboard: styled.div`\n    padding: ${(props) => props.theme.spacings.xl};\n  `,\n  Container: styled.div`\n    background-color: ${(props) => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `,\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}