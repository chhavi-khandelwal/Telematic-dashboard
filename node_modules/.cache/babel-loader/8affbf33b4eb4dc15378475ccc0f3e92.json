{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/SideBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlertedMachines, getMachines } from 'store/machine/machine.selectors';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = props => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machines = useSelector(getMachines);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Styled.SideBar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SideBar, \"0qX6UM30dPD+P3CZYqrGA4sP1MY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = SideBar;\nconst Styled = {\n  SideBar: styled.div`\n    position: fixed;\n    right: 0;\n    background-color: ${props => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  `\n};\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/SideBar.tsx"],"names":["useDispatch","useSelector","getAlertedMachines","getMachines","useState","styled","SideBar","props","showAlert","setShowAlert","pageNumber","setPageNumber","alertedMachines","machines","dispatch","Styled","div","theme","colors","white"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,kBADF,EAEEC,WAFF,QAGO,iCAHP;AAKA,SAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAOA,MAAMC,OAAO,GAAIC,KAAD,IAAkB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,CAAT,CAA5C;AAEA,QAAMQ,eAAe,GAAGX,WAAW,CAACC,kBAAD,CAAnC;AACA,QAAMW,QAAQ,GAAGZ,WAAW,CAACE,WAAD,CAA5B;AAEA,QAAMW,QAAQ,GAAGd,WAAW,EAA5B;AAEA,sBAAO,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAVD;;GAAMM,O;UAIoBL,W,EACPA,W,EAEAD,W;;;KAPbM,O;AAYN,MAAMS,MAAM,GAAG;AACbT,EAAAA,OAAO,EAAED,MAAM,CAACW,GAAI;AACtB;AACA;AACA,wBAAyBT,KAAD,IAAWA,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA;AACA;AACA;AATe,CAAf;AAYA,eAAeb,OAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAlertedMachines,\n  getMachines,\n} from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from '../components/Modal';\nimport styled from 'styled-components';\nimport { MachineConfig } from 'store/machine/machine.types';\n\ninterface Props {\n  alertedMachines: MachineConfig[];\n}\n\nconst SideBar = (props: Props) => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machines = useSelector(getMachines);\n\n  const dispatch = useDispatch();\n\n  return <Styled.SideBar></Styled.SideBar>;\n};\n\nconst Styled = {\n  SideBar: styled.div`\n    position: fixed;\n    right: 0;\n    background-color: ${(props) => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  `,\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}