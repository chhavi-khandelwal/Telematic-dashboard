{"ast":null,"code":"import { isType } from 'typescript-fsa';\nimport { data } from './data';\nimport * as actions from './machine.actions';\nexport const INITIAL_STATE = {\n  config: [],\n  machines: data,\n  alertedMachines: []\n};\nexport const machineReducer = (state = INITIAL_STATE, action) => {\n  if (isType(action, actions.updateMachineConfig)) {\n    return { ...state,\n      config: action.payload\n    };\n  }\n\n  if (isType(action, actions.updateAlertedMachines)) {\n    debugger;\n    return { ...state,\n      config: [...state.alertedMachines, ...action.payload]\n    };\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/machine.reducer.ts"],"names":["isType","data","actions","INITIAL_STATE","config","machines","alertedMachines","machineReducer","state","action","updateMachineConfig","payload","updateAlertedMachines"],"mappings":"AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,MAAM,EAAE,EADmB;AAE3BC,EAAAA,QAAQ,EAAEJ,IAFiB;AAG3BK,EAAAA,eAAe,EAAE;AAHU,CAAtB;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAA2C;AACvE,MAAIT,MAAM,CAACS,MAAD,EAASP,OAAO,CAACQ,mBAAjB,CAAV,EAAiD;AAC/C,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,MAAM,EAAEK,MAAM,CAACE;AAFV,KAAP;AAID;;AACD,MAAIX,MAAM,CAACS,MAAD,EAASP,OAAO,CAACU,qBAAjB,CAAV,EAAmD;AACjD;AACA,WAAO,EACL,GAAGJ,KADE;AAELJ,MAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACF,eAAV,EAA2B,GAAGG,MAAM,CAACE,OAArC;AAFH,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CAhBM","sourcesContent":["import { Action } from 'redux';\nimport { isType } from 'typescript-fsa';\nimport { data } from './data';\nimport * as actions from './machine.actions';\n\nexport const INITIAL_STATE = {\n  config: [],\n  machines: data,\n  alertedMachines: [],\n};\n\nexport const machineReducer = (state = INITIAL_STATE, action: Action) => {\n  if (isType(action, actions.updateMachineConfig)) {\n    return {\n      ...state,\n      config: action.payload,\n    };\n  }\n  if (isType(action, actions.updateAlertedMachines)) {\n    debugger;\n    return {\n      ...state,\n      config: [...state.alertedMachines, ...action.payload],\n    };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}