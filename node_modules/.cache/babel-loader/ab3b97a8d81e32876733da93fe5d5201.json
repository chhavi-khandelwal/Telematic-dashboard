{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { addAlertedMachines, updateMachines } from './machine.actions';\nimport { ALERT } from 'constants/enum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setAlert = mc => {\n  const idleHours = mc.cumulativeIdleHours.hour;\n  const operatingHours = mc.cumulativeOperatingHours.hour;\n\n  if (operatingHours / idleHours < 3) {\n    mc.alert = ALERT.IDLE;\n    return mc;\n  }\n\n  const fuelRemaining = mc.fuelRemaining.percent;\n\n  if (fuelRemaining < 5) {\n    mc.alert = ALERT.FUEL_LIMIT;\n    return mc;\n  }\n\n  if (idleHours < 5 || operatingHours < 5) {\n    mc.alert = ALERT.WEEKEND_OFF;\n    return mc;\n  }\n\n  const engineStatus = mc.engineStatus.running;\n\n  if (!engineStatus) {\n    mc.alert = ALERT.ENGINE_FAILED;\n    return mc;\n  }\n\n  return mc;\n};\n\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n\n  const WebSocketContext = /*#__PURE__*/createContext(null);\n  let socket = null;\n  let ws;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log('++');\n\n    if (!socket) {\n      //@ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      socket = io('http://localhost:5000');\n      socket.on('machineUpdater', data => {\n        dispatch(addAlertedMachines([setAlert(data[0])]));\n        dispatch(updateMachines(data));\n      }); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n      ws = {\n        socket: socket\n      };\n    } // return () => socket.disconnect();\n\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: ws,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WebSocketProvider, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = WebSocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx"],"names":["React","createContext","useEffect","io","useDispatch","addAlertedMachines","updateMachines","ALERT","setAlert","mc","idleHours","cumulativeIdleHours","hour","operatingHours","cumulativeOperatingHours","alert","IDLE","fuelRemaining","percent","FUEL_LIMIT","WEEKEND_OFF","engineStatus","running","ENGINE_FAILED","WebSocketProvider","children","WebSocketContext","socket","ws","dispatch","console","log","on","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,mBAAnD;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,QAAQ,GAAIC,EAAD,IAAuB;AACtC,QAAMC,SAAS,GAAGD,EAAE,CAACE,mBAAH,CAAuBC,IAAzC;AACA,QAAMC,cAAc,GAAGJ,EAAE,CAACK,wBAAH,CAA4BF,IAAnD;;AACA,MAAIC,cAAc,GAAGH,SAAjB,GAA6B,CAAjC,EAAoC;AAClCD,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACS,IAAjB;AACA,WAAOP,EAAP;AACD;;AACD,QAAMQ,aAAa,GAAGR,EAAE,CAACQ,aAAH,CAAiBC,OAAvC;;AAEA,MAAID,aAAa,GAAG,CAApB,EAAuB;AACrBR,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACY,UAAjB;AACA,WAAOV,EAAP;AACD;;AAED,MAAIC,SAAS,GAAG,CAAZ,IAAiBG,cAAc,GAAG,CAAtC,EAAyC;AACvCJ,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACa,WAAjB;AACA,WAAOX,EAAP;AACD;;AACD,QAAMY,YAAY,GAAGZ,EAAE,CAACY,YAAH,CAAgBC,OAArC;;AAEA,MAAI,CAACD,YAAL,EAAmB;AACjBZ,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACgB,aAAjB;AACA,WAAOd,EAAP;AACD;;AACD,SAAOA,EAAP;AACD,CAzBD;;AA2BA,OAAO,MAAMe,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACtD,QAAMC,gBAAgB,gBAAGzB,aAAa,CAAM,IAAN,CAAtC;AACA,MAAI0B,MAAW,GAAG,IAAlB;AACA,MAAIC,EAAJ;AAEA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AAEA,QAAI,CAACJ,MAAL,EAAa;AACX;AACA;AACAA,MAAAA,MAAM,GAAGxB,EAAE,CAAC,uBAAD,CAAX;AAEAwB,MAAAA,MAAM,CAACK,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAA2B;AACrDJ,QAAAA,QAAQ,CAACxB,kBAAkB,CAAC,CAACG,QAAQ,CAACyB,IAAI,CAAC,CAAD,CAAL,CAAT,CAAD,CAAnB,CAAR;AACAJ,QAAAA,QAAQ,CAACvB,cAAc,CAAC2B,IAAD,CAAf,CAAR;AACD,OAHD,EALW,CAUX;;AACAL,MAAAA,EAAE,GAAG;AACHD,QAAAA,MAAM,EAAEA;AADL,OAAL;AAGD,KAjBa,CAkBd;;AACD,GAnBQ,EAmBN,CAACA,MAAD,CAnBM,CAAT;AAqBA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEC,EAAlC;AAAA,cAAuCH;AAAvC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA/BM;;GAAMD,iB;UAKMpB,W;;;KALNoB,iB","sourcesContent":["import React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { addAlertedMachines, updateMachines } from './machine.actions';\nimport { MachineConfig } from './machine.types';\nimport { ALERT } from 'constants/enum';\n\nconst setAlert = (mc: MachineConfig) => {\n  const idleHours = mc.cumulativeIdleHours.hour;\n  const operatingHours = mc.cumulativeOperatingHours.hour;\n  if (operatingHours / idleHours < 3) {\n    mc.alert = ALERT.IDLE;\n    return mc;\n  }\n  const fuelRemaining = mc.fuelRemaining.percent;\n\n  if (fuelRemaining < 5) {\n    mc.alert = ALERT.FUEL_LIMIT;\n    return mc;\n  }\n\n  if (idleHours < 5 || operatingHours < 5) {\n    mc.alert = ALERT.WEEKEND_OFF;\n    return mc;\n  }\n  const engineStatus = mc.engineStatus.running;\n\n  if (!engineStatus) {\n    mc.alert = ALERT.ENGINE_FAILED;\n    return mc;\n  }\n  return mc;\n};\n\nexport const WebSocketProvider = ({ children }: any) => {\n  const WebSocketContext = createContext<any>(null);\n  let socket: any = null;\n  let ws;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('++');\n\n    if (!socket) {\n      //@ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      socket = io('http://localhost:5000');\n\n      socket.on('machineUpdater', (data: MachineConfig[]) => {\n        dispatch(addAlertedMachines([setAlert(data[0])]));\n        dispatch(updateMachines(data));\n      });\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ws = {\n        socket: socket,\n      };\n    }\n    // return () => socket.disconnect();\n  }, [socket]);\n\n  return (\n    <WebSocketContext.Provider value={ws}>{children}</WebSocketContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}