{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { getMachineConfig } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from './Modal';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const machineConfig = useSelector(getMachineConfig);\n  useEffect(() => {\n    if (machineConfig) {\n      const alertedMachines = machineConfig.filter(mc => {\n        const operatingHours = mc.cumulativeIdleHours.hour;\n        const idleHours = mc.cumulativeOperatingHours.hour;\n\n        if (operatingHours / idleHours < 3) {\n          return mc;\n        }\n\n        return false;\n      });\n\n      if (alertedMachines.length) {\n        setShowAlert(true);\n      }\n    }\n  }, [machineConfig]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setShowAlert(false),\n      children: /*#__PURE__*/_jsxDEV(Styled.Container, {\n        children: \"Add languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: machineConfig,\n      setPageNumber: setPageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tile, \"28WSuletaMaGxj1XUuACWDAc2Yw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Tile;\nconst Styled = {\n  Container: styled.div`\n    background-color: ${props => props.theme.colors.white};\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    flex-direction: column;\n  `\n};\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.tsx"],"names":["useSelector","getMachineConfig","Table","useEffect","useState","Modal","styled","Tile","showAlert","setShowAlert","pageNumber","setPageNumber","machineConfig","alertedMachines","filter","mc","operatingHours","cumulativeIdleHours","hour","idleHours","cumulativeOperatingHours","length","Styled","Container","div","props","theme","colors","white"],"mappings":";;;AAAA,SAASA,WAAT,QAAsC,aAAtC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAMQ,aAAa,GAAGZ,WAAW,CAACC,gBAAD,CAAjC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,aAAJ,EAAmB;AACjB,YAAMC,eAAe,GAAGD,aAAa,CAACE,MAAd,CAAsBC,EAAD,IAAQ;AACnD,cAAMC,cAAc,GAAGD,EAAE,CAACE,mBAAH,CAAuBC,IAA9C;AACA,cAAMC,SAAS,GAAGJ,EAAE,CAACK,wBAAH,CAA4BF,IAA9C;;AACA,YAAIF,cAAc,GAAGG,SAAjB,GAA6B,CAAjC,EAAoC;AAClC,iBAAOJ,EAAP;AACD;;AACD,eAAO,KAAP;AACD,OAPuB,CAAxB;;AAQA,UAAIF,eAAe,CAACQ,MAApB,EAA4B;AAC1BZ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF;AACF,GAdQ,EAcN,CAACG,aAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,eACGJ,SAAS,iBACR,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAlC;AAAA,6BACE,QAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,aAAb;AAA4B,MAAA,aAAa,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CA/BD;;GAAMJ,I;UAGkBP,W;;;KAHlBO,I;AAiCN,MAAMe,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAEjB,MAAM,CAACkB,GAAI;AACxB,wBAAyBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA;AACA;AACA;AAPe,CAAf;AAUA,eAAerB,IAAf","sourcesContent":["import { useSelector, useStore } from 'react-redux';\nimport { getMachineConfig } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from './Modal';\nimport styled from 'styled-components';\n\nconst Tile = () => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n  const machineConfig = useSelector(getMachineConfig);\n\n  useEffect(() => {\n    if (machineConfig) {\n      const alertedMachines = machineConfig.filter((mc) => {\n        const operatingHours = mc.cumulativeIdleHours.hour;\n        const idleHours = mc.cumulativeOperatingHours.hour;\n        if (operatingHours / idleHours < 3) {\n          return mc;\n        }\n        return false;\n      });\n      if (alertedMachines.length) {\n        setShowAlert(true);\n      }\n    }\n  }, [machineConfig]);\n\n  return (\n    <>\n      {showAlert && (\n        <Modal onClose={() => setShowAlert(false)}>\n          <Styled.Container>Add languages</Styled.Container>\n        </Modal>\n      )}\n      <Table data={machineConfig} setPageNumber={setPageNumber} />\n    </>\n  );\n};\n\nconst Styled = {\n  Container: styled.div`\n    background-color: ${(props) => props.theme.colors.white};\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    flex-direction: column;\n  `,\n};\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}