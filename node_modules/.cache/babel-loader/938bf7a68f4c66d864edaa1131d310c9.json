{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { addAlertedMachines, updateMachines } from './machine.actions';\nimport { setAlert } from 'utils/getAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebSocketProvider = ({\n  socket,\n  children\n}) => {\n  _s();\n\n  const WebSocketContext = /*#__PURE__*/createContext(null);\n  let ws;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!socket) {\n      //@ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      socket = io('http://localhost:5000');\n      socket.on('machineUpdater', data => {\n        dispatch(addAlertedMachines([setAlert(data[0])]));\n        dispatch(updateMachines(data));\n      }); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n      ws = {\n        socket: socket.current\n      };\n    }\n\n    return () => socket.disconnect();\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: ws,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WebSocketProvider, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = WebSocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx"],"names":["React","createContext","useEffect","io","useDispatch","addAlertedMachines","updateMachines","setAlert","WebSocketProvider","socket","children","WebSocketContext","ws","dispatch","on","data","current","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAwD,OAAxD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,mBAAnD;AAIA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA+B;AAAA;;AAC9D,QAAMC,gBAAgB,gBAAGV,aAAa,CAAM,IAAN,CAAtC;AACA,MAAIW,EAAJ;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,MAAL,EAAa;AACX;AACA;AACAA,MAAAA,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAX;AAEAM,MAAAA,MAAM,CAACK,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAA2B;AACrDF,QAAAA,QAAQ,CAACR,kBAAkB,CAAC,CAACE,QAAQ,CAACQ,IAAI,CAAC,CAAD,CAAL,CAAT,CAAD,CAAnB,CAAR;AACAF,QAAAA,QAAQ,CAACP,cAAc,CAACS,IAAD,CAAf,CAAR;AACD,OAHD,EALW,CAUX;;AACAH,MAAAA,EAAE,GAAG;AACHH,QAAAA,MAAM,EAAEA,MAAM,CAACO;AADZ,OAAL;AAGD;;AACD,WAAO,MAAMP,MAAM,CAACQ,UAAP,EAAb;AACD,GAjBQ,EAiBN,CAACR,MAAD,CAjBM,CAAT;AAmBA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEG,EAAlC;AAAA,cAAuCF;AAAvC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5BM;;GAAMF,iB;UAIMJ,W;;;KAJNI,iB","sourcesContent":["import React, { createContext, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAlertedMachines, updateMachines } from './machine.actions';\nimport { MachineConfig } from './machine.types';\nimport { ALERT } from 'constants/enum';\nimport { getAlertedMachines } from './machine.selectors';\nimport { setAlert } from 'utils/getAlert';\n\nexport const WebSocketProvider = ({ socket, children }: any) => {\n  const WebSocketContext = createContext<any>(null);\n  let ws;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!socket) {\n      //@ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      socket = io('http://localhost:5000');\n\n      socket.on('machineUpdater', (data: MachineConfig[]) => {\n        dispatch(addAlertedMachines([setAlert(data[0])]));\n        dispatch(updateMachines(data));\n      });\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ws = {\n        socket: socket.current,\n      };\n    }\n    return () => socket.disconnect();\n  }, [socket]);\n\n  return (\n    <WebSocketContext.Provider value={ws}>{children}</WebSocketContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}