{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/SideBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { getAlertedMachines } from 'store/machine/machine.selectors';\nimport styled from 'styled-components';\nimport MachineBlock from './MachineBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = props => {\n  _s();\n\n  const alertedMachines = useSelector(getAlertedMachines);\n\n  const onClose = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Styled.SideBar, {\n    children: alertedMachines.map(aM => /*#__PURE__*/_jsxDEV(Styled.BlockContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Styled.Close, {\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Cross,\n          width: 16,\n          height: 16,\n          alt: \"close alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MachineBlock, {\n        alertedMachine: aM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideBar, \"/xX+VsGQBgKoTDM9sm3L2OJ1KfI=\", false, function () {\n  return [useSelector];\n});\n\n_c = SideBar;\nconst Styled = {\n  Close: styled.button`\n    border: 0;\n    background: none;\n  `,\n  SideBar: styled.div`\n    height: 100vh;\n    width: 20%;\n    background-color: ${props => props.theme.colors.white};\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    flex-direction: column;\n    padding: ${props => props.theme.spacings.xl};\n    top: 0;\n    bottom: 0;\n    overflow: scroll;\n  `\n};\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/SideBar.tsx"],"names":["useSelector","getAlertedMachines","styled","MachineBlock","SideBar","props","alertedMachines","onClose","map","aM","Cross","Styled","Close","button","div","theme","colors","white","spacings","xl"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAMA,MAAMC,OAAO,GAAIC,KAAD,IAAkB;AAAA;;AAChC,QAAMC,eAAe,GAAGN,WAAW,CAACC,kBAAD,CAAnC;;AACA,QAAMM,OAAO,GAAG,MAAM,CAAE,CAAxB;;AACA,sBACE,QAAC,MAAD,CAAQ,OAAR;AAAA,cACGD,eAAe,CAACE,GAAhB,CAAqBC,EAAD,iBACnB,QAAC,MAAD,CAAQ,cAAR;AAAA,8BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,OAAO,EAAEF,OAAvB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEG,KAAV;AAAiB,UAAA,KAAK,EAAE,EAAxB;AAA4B,UAAA,MAAM,EAAE,EAApC;AAAwC,UAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,cAAc,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAML,O;UACoBJ,W;;;KADpBI,O;AAiBN,MAAMO,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAEV,MAAM,CAACW,MAAO;AACvB;AACA;AACA,GAJe;AAKbT,EAAAA,OAAO,EAAEF,MAAM,CAACY,GAAI;AACtB;AACA;AACA,wBAAyBT,KAAD,IAAWA,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA;AACA;AACA,eAAgBZ,KAAD,IAAWA,KAAK,CAACU,KAAN,CAAYG,QAAZ,CAAqBC,EAAG;AAClD;AACA;AACA;AACA;AAjBe,CAAf;AAoBA,eAAef,OAAf","sourcesContent":["import { useSelector } from 'react-redux';\nimport { getAlertedMachines } from 'store/machine/machine.selectors';\nimport styled from 'styled-components';\nimport { MachineConfig } from 'store/machine/machine.types';\nimport MachineBlock from './MachineBlock';\n\ninterface Props {\n  alertedMachines: MachineConfig[];\n}\n\nconst SideBar = (props: Props) => {\n  const alertedMachines = useSelector(getAlertedMachines);\n  const onClose = () => {};\n  return (\n    <Styled.SideBar>\n      {alertedMachines.map((aM) => (\n        <Styled.BlockContainer>\n          <Styled.Close onClick={onClose}>\n            <img src={Cross} width={16} height={16} alt=\"close alert\" />\n          </Styled.Close>\n          <MachineBlock alertedMachine={aM} />\n        </Styled.BlockContainer>\n      ))}\n    </Styled.SideBar>\n  );\n};\n\nconst Styled = {\n  Close: styled.button`\n    border: 0;\n    background: none;\n  `,\n  SideBar: styled.div`\n    height: 100vh;\n    width: 20%;\n    background-color: ${(props) => props.theme.colors.white};\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    flex-direction: column;\n    padding: ${(props) => props.theme.spacings.xl};\n    top: 0;\n    bottom: 0;\n    overflow: scroll;\n  `,\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}