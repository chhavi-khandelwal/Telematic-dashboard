{"ast":null,"code":"import React,{createContext,useEffect}from'react';import io from'socket.io-client';import{useDispatch}from'react-redux';import{updateMachineConfig}from'./machine.actions';import{jsx as _jsx}from\"react/jsx-runtime\";export var WebSocketProvider=function WebSocketProvider(_ref){var children=_ref.children;var WebSocketContext=/*#__PURE__*/createContext(null);var socket=null;var ws;var dispatch=useDispatch();useEffect(function(){if(!socket){//@ts-ignore\n// eslint-disable-next-line react-hooks/exhaustive-deps\nsocket=io('http://localhost:5000');socket.on('machineUpdater',function(data){// const payload = data.map((c) => ({\n//   id: c.id,\n//   name: c.equipmentHeader.OEMName,\n//   fuelUsed: { fuelConsumed: c.fuelUsed.fuelConsumed },\n// }));\n// console.log(data);\ndispatch(updateMachineConfig(data));});// eslint-disable-next-line react-hooks/exhaustive-deps\nws={socket:socket};}return function(){return socket.disconnect();};},[socket]);return/*#__PURE__*/_jsx(WebSocketContext.Provider,{value:ws,children:children});};","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/client.tsx"],"names":["React","createContext","useEffect","io","useDispatch","updateMachineConfig","WebSocketProvider","children","WebSocketContext","socket","ws","dispatch","on","data","disconnect"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,SAA/B,KAAgD,OAAhD,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,mBAAT,KAAoC,mBAApC,C,2CAGA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAuB,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CACtD,GAAMC,CAAAA,gBAAgB,cAAGP,aAAa,CAAM,IAAN,CAAtC,CACA,GAAIQ,CAAAA,MAAW,CAAG,IAAlB,CACA,GAAIC,CAAAA,EAAJ,CAEA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAI,CAACO,MAAL,CAAa,CACX;AACA;AACAA,MAAM,CAAGN,EAAE,CAAC,uBAAD,CAAX,CAEAM,MAAM,CAACG,EAAP,CAAU,gBAAV,CAA4B,SAACC,IAAD,CAA2B,CACrD;AACA;AACA;AACA;AACA;AACA;AACAF,QAAQ,CAACN,mBAAmB,CAACQ,IAAD,CAApB,CAAR,CACD,CARD,EAUA;AACAH,EAAE,CAAG,CACHD,MAAM,CAAEA,MADL,CAAL,CAGD,CACD,MAAO,kBAAMA,CAAAA,MAAM,CAACK,UAAP,EAAN,EAAP,CACD,CAtBQ,CAsBN,CAACL,MAAD,CAtBM,CAAT,CAwBA,mBACE,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEC,EAAlC,UAAuCH,QAAvC,EADF,CAGD,CAlCM","sourcesContent":["import React, { createContext, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { updateMachineConfig } from './machine.actions';\nimport { MachineConfig } from './machine.types';\n\nexport const WebSocketProvider = ({ children }: any) => {\n  const WebSocketContext = createContext<any>(null);\n  let socket: any = null;\n  let ws;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!socket) {\n      //@ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      socket = io('http://localhost:5000');\n\n      socket.on('machineUpdater', (data: MachineConfig[]) => {\n        // const payload = data.map((c) => ({\n        //   id: c.id,\n        //   name: c.equipmentHeader.OEMName,\n        //   fuelUsed: { fuelConsumed: c.fuelUsed.fuelConsumed },\n        // }));\n        // console.log(data);\n        dispatch(updateMachineConfig(data));\n      });\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ws = {\n        socket: socket,\n      };\n    }\n    return () => socket.disconnect();\n  }, [socket]);\n\n  return (\n    <WebSocketContext.Provider value={ws}>{children}</WebSocketContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}