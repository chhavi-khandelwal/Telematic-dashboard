{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlertedMachines, getMachineConfig, getMachines } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from './Modal';\nimport styled from 'styled-components';\nimport { removeAlertedMachines } from 'store/machine/machine.actions';\nimport MachineBlock from './MachineBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machineConfig = useSelector(getMachineConfig);\n  const machines = useSelector(getMachines);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // console.log(machineConfig, showAlert, alertedMachines);\n    if (!showAlert && alertedMachines.length) {\n      // dispatch(updateAlertedMachines(alertedMachines));\n      setShowAlert(true);\n    }\n  }, [showAlert, alertedMachines]);\n  return /*#__PURE__*/_jsxDEV(Styled.Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Heading, {\n      children: \"Tele\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showAlert && (alertedMachines === null || alertedMachines === void 0 ? void 0 : alertedMachines.length) && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => {\n        setShowAlert(false);\n        dispatch(removeAlertedMachines());\n      },\n      children: /*#__PURE__*/_jsxDEV(Styled.Container, {\n        children: alertedMachines.map(aM => /*#__PURE__*/_jsxDEV(Styled.Full, {\n          children: /*#__PURE__*/_jsxDEV(MachineBlock, {\n            alertedMachine: aM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, aM.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: machines,\n      setPageNumber: setPageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tile, \"a3GViosgrq8McEb9VH9UB7/4kD4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Tile;\nconst Styled = {\n  Heading: styled.h3``,\n  Full: styled.div`\n    width: 100%;\n  `,\n  Dashboard: styled.div`\n    padding: ${props => props.theme.spacings.xl};\n  `,\n  Container: styled.div`\n    background-color: ${props => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  `\n};\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.tsx"],"names":["useDispatch","useSelector","getAlertedMachines","getMachineConfig","getMachines","Table","useEffect","useState","Modal","styled","removeAlertedMachines","MachineBlock","Tile","showAlert","setShowAlert","pageNumber","setPageNumber","alertedMachines","machineConfig","machines","dispatch","length","map","aM","id","Styled","Heading","h3","Full","div","Dashboard","props","theme","spacings","xl","Container","colors","white"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,WAHF,QAIO,iCAJP;AAKA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAGEC,qBAHF,QAIO,+BAJP;AAKA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAS,CAAT,CAA5C;AAEA,QAAMU,eAAe,GAAGhB,WAAW,CAACC,kBAAD,CAAnC;AACA,QAAMgB,aAAa,GAAGjB,WAAW,CAACE,gBAAD,CAAjC;AACA,QAAMgB,QAAQ,GAAGlB,WAAW,CAACG,WAAD,CAA5B;AAEA,QAAMgB,QAAQ,GAAGpB,WAAW,EAA5B;AAEAM,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACO,SAAD,IAAcI,eAAe,CAACI,MAAlC,EAA0C;AACxC;AACAP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAACD,SAAD,EAAYI,eAAZ,CANM,CAAT;AAQA,sBACE,QAAC,MAAD,CAAQ,SAAR;AAAA,4BACE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,SAAS,KAAII,eAAJ,aAAIA,eAAJ,uBAAIA,eAAe,CAAEI,MAArB,CAAT,iBACC,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,QAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACD,OAJH;AAAA,6BAME,QAAC,MAAD,CAAQ,SAAR;AAAA,kBACGO,eAAe,CAACK,GAAhB,CAAqBC,EAAD,iBACnB,QAAC,MAAD,CAAQ,IAAR;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,cAAc,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF,WAAkBA,EAAE,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAkBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,QAAb;AAAuB,MAAA,aAAa,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAxCD;;GAAMJ,I;UAIoBX,W,EACFA,W,EACLA,W,EAEAD,W;;;KARbY,I;AA0CN,MAAMa,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAEjB,MAAM,CAACkB,EAAG,EADN;AAEbC,EAAAA,IAAI,EAAEnB,MAAM,CAACoB,GAAI;AACnB;AACA,GAJe;AAKbC,EAAAA,SAAS,EAAErB,MAAM,CAACoB,GAAI;AACxB,eAAgBE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBC,EAAG;AAClD,GAPe;AAQbC,EAAAA,SAAS,EAAE1B,MAAM,CAACoB,GAAI;AACxB,wBAAyBE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA;AACA;AACA;AAde,CAAf;AAiBA,eAAezB,IAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAlertedMachines,\n  getMachineConfig,\n  getMachines,\n} from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect, useState } from 'react';\nimport Modal from './Modal';\nimport styled from 'styled-components';\nimport {\n  updateMachineConfig,\n  updateAlertedMachines,\n  removeAlertedMachines,\n} from 'store/machine/machine.actions';\nimport MachineBlock from './MachineBlock';\nimport { ALERT } from 'constants/enum';\n\nconst Tile = () => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  const alertedMachines = useSelector(getAlertedMachines);\n  const machineConfig = useSelector(getMachineConfig);\n  const machines = useSelector(getMachines);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // console.log(machineConfig, showAlert, alertedMachines);\n    if (!showAlert && alertedMachines.length) {\n      // dispatch(updateAlertedMachines(alertedMachines));\n      setShowAlert(true);\n    }\n  }, [showAlert, alertedMachines]);\n\n  return (\n    <Styled.Dashboard>\n      <Styled.Heading>Tele</Styled.Heading>\n      {showAlert && alertedMachines?.length && (\n        <Modal\n          onClose={() => {\n            setShowAlert(false);\n            dispatch(removeAlertedMachines());\n          }}\n        >\n          <Styled.Container>\n            {alertedMachines.map((aM) => (\n              <Styled.Full key={aM.id}>\n                <MachineBlock alertedMachine={aM} />\n              </Styled.Full>\n            ))}\n          </Styled.Container>\n        </Modal>\n      )}\n      <Table data={machines} setPageNumber={setPageNumber} />\n    </Styled.Dashboard>\n  );\n};\n\nconst Styled = {\n  Heading: styled.h3``,\n  Full: styled.div`\n    width: 100%;\n  `,\n  Dashboard: styled.div`\n    padding: ${(props) => props.theme.spacings.xl};\n  `,\n  Container: styled.div`\n    background-color: ${(props) => props.theme.colors.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  `,\n};\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}