{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useStore } from 'react-redux';\nimport { getMachineConfig } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const machineConfig = useSelector(getMachineConfig);\n  useEffect(() => {\n    const operatingHours = machineConfig.cumulativeIdleHours.hour;\n    const idleHours = machineConfig.cumulativeOperatingHours.hour;\n\n    if (operatingHours / idleHours < 3) {\n      setShowAlert(true);\n    }\n  }, [machineConfig]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    data: machineConfig\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tile, \"jRsuO52CAWr+XSe6+f1JU1wDRqM=\", false, function () {\n  return [useSelector];\n});\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Tile.jsx"],"names":["useSelector","useStore","getMachineConfig","Table","useEffect","Tile","showAlert","setShowAlert","useState","machineConfig","operatingHours","cumulativeIdleHours","hour","idleHours","cumulativeOperatingHours"],"mappings":";;;AAAA,SAAUA,WAAV,EAAuBC,QAAvB,QAAuC,aAAvC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAGA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BC,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAMC,aAAa,GAAGT,WAAW,CAACE,gBAAD,CAAjC;AAEAE,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMM,cAAc,GAAGD,aAAa,CAACE,mBAAd,CAAkCC,IAAzD;AACA,UAAMC,SAAS,GAAGJ,aAAa,CAACK,wBAAd,CAAuCF,IAAzD;;AACA,QAAIF,cAAc,GAAEG,SAAhB,GAA4B,CAAhC,EAAmC;AACjCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAEF,GAPQ,EAON,CAACE,aAAD,CAPM,CAAT;AASA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhBD;;GAAMJ,I;UAEkBL,W;;;KAFlBK,I;AAkBN,eAAeA,IAAf","sourcesContent":["import {  useSelector, useStore } from 'react-redux';\nimport { getMachineConfig } from 'store/machine/machine.selectors';\nimport Table from 'components/Table';\nimport { useEffect } from 'react';\n\n\nconst Tile = ()=> {\n  const [showAlert,setShowAlert] = useState(false)\n  const machineConfig = useSelector(getMachineConfig);\n\n  useEffect(()=> {\n    const operatingHours = machineConfig.cumulativeIdleHours.hour\n    const idleHours = machineConfig.cumulativeOperatingHours.hour\n    if (operatingHours /idleHours < 3) {\n      setShowAlert(true);\n    }\n\n  }, [machineConfig])\n\n  return (\n    <Table data={machineConfig}/>\n  );\n}\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}