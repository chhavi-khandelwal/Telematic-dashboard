{"ast":null,"code":"import { isType } from 'typescript-fsa';\nimport { data } from './data';\nimport * as actions from './machine.actions';\nexport const INITIAL_STATE = {\n  config: [],\n  machines: data\n};\nexport const machineReducer = (state = INITIAL_STATE, action) => {\n  if (isType(action, actions.updateMachineConfig)) {\n    return { ...state,\n      config: [...state.config, ...action.payload]\n    };\n  }\n\n  if (isType(action, actions.updateAlertedMachines)) {\n    return { ...state,\n      config: [...state.alertedMachines, ...action.payload]\n    };\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/machine/machine.reducer.ts"],"names":["isType","data","actions","INITIAL_STATE","config","machines","machineReducer","state","action","updateMachineConfig","payload","updateAlertedMachines","alertedMachines"],"mappings":"AACA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,MAAM,EAAE,EADmB;AAE3BC,EAAAA,QAAQ,EAAEJ;AAFiB,CAAtB;AAKP,OAAO,MAAMK,cAAc,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAA2C;AACvE,MAAIR,MAAM,CAACQ,MAAD,EAASN,OAAO,CAACO,mBAAjB,CAAV,EAAiD;AAC/C,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkB,GAAGI,MAAM,CAACE,OAA5B;AAFH,KAAP;AAID;;AACD,MAAIV,MAAM,CAACQ,MAAD,EAASN,OAAO,CAACS,qBAAjB,CAAV,EAAmD;AACjD,WAAO,EACL,GAAGJ,KADE;AAELH,MAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACK,eAAV,EAA2B,GAAGJ,MAAM,CAACE,OAArC;AAFH,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CAfM","sourcesContent":["import { Action } from 'redux';\nimport { isType } from 'typescript-fsa';\nimport { data } from './data';\nimport * as actions from './machine.actions';\n\nexport const INITIAL_STATE = {\n  config: [],\n  machines: data,\n};\n\nexport const machineReducer = (state = INITIAL_STATE, action: Action) => {\n  if (isType(action, actions.updateMachineConfig)) {\n    return {\n      ...state,\n      config: [...state.config, ...action.payload],\n    };\n  }\n  if (isType(action, actions.updateAlertedMachines)) {\n    return {\n      ...state,\n      config: [...state.alertedMachines, ...action.payload],\n    };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}