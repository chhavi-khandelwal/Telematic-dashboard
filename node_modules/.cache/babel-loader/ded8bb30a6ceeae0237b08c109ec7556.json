{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/App.tsx\";\nimport { Provider } from 'react-redux';\nimport store from 'store/store';\nimport { WebSocketProvider } from 'store/machine/client';\nimport Tile from 'components/Tile';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(WebSocketProvider, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Tile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/App.tsx"],"names":["Provider","store","WebSocketProvider","Tile","ThemeProvider","theme","App"],"mappings":";AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,KAAT,QAAsB,OAAtB;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEI,KAAtB;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVQC,G;AAYT,eAAeA,GAAf","sourcesContent":["import { Provider } from 'react-redux';\nimport store from 'store/store';\nimport { WebSocketProvider } from 'store/machine/client';\nimport Tile from 'components/Tile';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <WebSocketProvider>\n        <ThemeProvider theme={theme}>\n          <Tile />\n        </ThemeProvider>\n      </WebSocketProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}