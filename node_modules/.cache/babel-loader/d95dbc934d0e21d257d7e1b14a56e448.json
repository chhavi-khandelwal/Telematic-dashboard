{"ast":null,"code":"import React,{createContext}from'react';import io from'socket.io-client';import{useDispatch}from'react-redux';import{updatePageNumber}from'./projects.actions';import{jsx as _jsx}from\"react/jsx-runtime\";var WebSocketContext=/*#__PURE__*/createContext(null);export{WebSocketContext};// eslint-disable-next-line import/no-anonymous-default-export\nexport default(function(_ref){var children=_ref.children;var socket=null;var ws;var dispatch=useDispatch();var sendMessage=function sendMessage(){var payload=new Date().toLocaleString();socket.emit('event://send-message',payload);dispatch(updatePageNumber(payload));};if(!socket){//@ts-ignore\n// socket = io('ws://localhost:5000', { transports: ['websocket'] });\nsocket=io.connect('http://localhost:5000');// const payload = new Date().toLocaleString();\nsocket.on('timer',function(msg){dispatch(updatePageNumber('msg'));console.log(msg,'message----');});ws={socket:socket,sendMessage:sendMessage};}return/*#__PURE__*/_jsx(WebSocketContext.Provider,{value:ws,children:children});});","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/store/projects/client.tsx"],"names":["React","createContext","io","useDispatch","updatePageNumber","WebSocketContext","children","socket","ws","dispatch","sendMessage","payload","Date","toLocaleString","emit","connect","on","msg","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,C,2CAEA,GAAMC,CAAAA,gBAAgB,cAAGJ,aAAa,CAAM,IAAN,CAAtC,CAEA,OAASI,gBAAT,EAEA;AACA,eAAe,cAAuB,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CACpC,GAAIC,CAAAA,MAAW,CAAG,IAAlB,CACA,GAAIC,CAAAA,EAAJ,CAEA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,cAAX,EAAhB,CAEAN,MAAM,CAACO,IAAP,CAAY,sBAAZ,CAAoCH,OAApC,EACAF,QAAQ,CAACL,gBAAgB,CAACO,OAAD,CAAjB,CAAR,CACD,CALD,CAOA,GAAI,CAACJ,MAAL,CAAa,CACX;AACA;AACAA,MAAM,CAAGL,EAAE,CAACa,OAAH,CAAW,uBAAX,CAAT,CACA;AAEAR,MAAM,CAACS,EAAP,CAAU,OAAV,CAAmB,SAACC,GAAD,CAAiB,CAClCR,QAAQ,CAACL,gBAAgB,CAAC,KAAD,CAAjB,CAAR,CACAc,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAiB,aAAjB,EACD,CAHD,EAKAT,EAAE,CAAG,CACHD,MAAM,CAAEA,MADL,CAEHG,WAAW,CAAXA,WAFG,CAAL,CAID,CAED,mBACE,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEF,EAAlC,UAAuCF,QAAvC,EADF,CAGD,CAjCD","sourcesContent":["import React, { createContext } from 'react';\nimport io from 'socket.io-client';\nimport { useDispatch } from 'react-redux';\nimport { updatePageNumber } from './projects.actions';\n\nconst WebSocketContext = createContext<any>(null);\n\nexport { WebSocketContext };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ children }: any) => {\n  let socket: any = null;\n  let ws;\n\n  const dispatch = useDispatch();\n\n  const sendMessage = () => {\n    const payload = new Date().toLocaleString();\n\n    socket.emit('event://send-message', payload);\n    dispatch(updatePageNumber(payload));\n  };\n\n  if (!socket) {\n    //@ts-ignore\n    // socket = io('ws://localhost:5000', { transports: ['websocket'] });\n    socket = io.connect('http://localhost:5000');\n    // const payload = new Date().toLocaleString();\n\n    socket.on('timer', (msg: string) => {\n      dispatch(updatePageNumber('msg'));\n      console.log(msg, 'message----');\n    });\n\n    ws = {\n      socket: socket,\n      sendMessage,\n    };\n  }\n\n  return (\n    <WebSocketContext.Provider value={ws}>{children}</WebSocketContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}