{"ast":null,"code":"import { ALERT } from 'constants/enum';\nexport const setAlert = mc => {\n  const idleHours = mc.cumulativeIdleHours.hour;\n  const operatingHours = mc.cumulativeOperatingHours.hour;\n\n  if (operatingHours / idleHours < 3) {\n    mc.alert = ALERT.IDLE;\n    return mc;\n  }\n\n  const fuelRemaining = mc.fuelRemaining.percent;\n\n  if (fuelRemaining < 5) {\n    mc.alert = ALERT.FUEL_LIMIT;\n    return mc;\n  }\n\n  if (idleHours < 5 || operatingHours < 5) {\n    mc.alert = ALERT.WEEKEND_OFF;\n    return mc;\n  }\n\n  const engineStatus = mc.engineStatus.running;\n\n  if (!engineStatus) {\n    mc.alert = ALERT.ENGINE_FAILED;\n    return mc;\n  }\n\n  return mc;\n};","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/utils/getAlert.ts"],"names":["ALERT","setAlert","mc","idleHours","cumulativeIdleHours","hour","operatingHours","cumulativeOperatingHours","alert","IDLE","fuelRemaining","percent","FUEL_LIMIT","WEEKEND_OFF","engineStatus","running","ENGINE_FAILED"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,QAAQ,GAAIC,EAAD,IAAuB;AAC7C,QAAMC,SAAS,GAAGD,EAAE,CAACE,mBAAH,CAAuBC,IAAzC;AACA,QAAMC,cAAc,GAAGJ,EAAE,CAACK,wBAAH,CAA4BF,IAAnD;;AACA,MAAIC,cAAc,GAAGH,SAAjB,GAA6B,CAAjC,EAAoC;AAClCD,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACS,IAAjB;AACA,WAAOP,EAAP;AACD;;AACD,QAAMQ,aAAa,GAAGR,EAAE,CAACQ,aAAH,CAAiBC,OAAvC;;AAEA,MAAID,aAAa,GAAG,CAApB,EAAuB;AACrBR,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACY,UAAjB;AACA,WAAOV,EAAP;AACD;;AAED,MAAIC,SAAS,GAAG,CAAZ,IAAiBG,cAAc,GAAG,CAAtC,EAAyC;AACvCJ,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACa,WAAjB;AACA,WAAOX,EAAP;AACD;;AACD,QAAMY,YAAY,GAAGZ,EAAE,CAACY,YAAH,CAAgBC,OAArC;;AAEA,MAAI,CAACD,YAAL,EAAmB;AACjBZ,IAAAA,EAAE,CAACM,KAAH,GAAWR,KAAK,CAACgB,aAAjB;AACA,WAAOd,EAAP;AACD;;AACD,SAAOA,EAAP;AACD,CAzBM","sourcesContent":["import { ALERT } from 'constants/enum';\nimport { MachineConfig } from 'store/machine/machine.types';\n\nexport const setAlert = (mc: MachineConfig) => {\n  const idleHours = mc.cumulativeIdleHours.hour;\n  const operatingHours = mc.cumulativeOperatingHours.hour;\n  if (operatingHours / idleHours < 3) {\n    mc.alert = ALERT.IDLE;\n    return mc;\n  }\n  const fuelRemaining = mc.fuelRemaining.percent;\n\n  if (fuelRemaining < 5) {\n    mc.alert = ALERT.FUEL_LIMIT;\n    return mc;\n  }\n\n  if (idleHours < 5 || operatingHours < 5) {\n    mc.alert = ALERT.WEEKEND_OFF;\n    return mc;\n  }\n  const engineStatus = mc.engineStatus.running;\n\n  if (!engineStatus) {\n    mc.alert = ALERT.ENGINE_FAILED;\n    return mc;\n  }\n  return mc;\n};\n"]},"metadata":{},"sourceType":"module"}