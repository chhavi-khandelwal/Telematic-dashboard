{"ast":null,"code":"var _jsxFileName = \"/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Modal.tsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  const {\n    children,\n    onClose,\n    isMobile\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Styled.ModalBox, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Shim, {\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Container, {\n      isMobile: isMobile,\n      children: /*#__PURE__*/_jsxDEV(Styled.Content, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Modal;\nconst Styled = {\n  ModalBox: styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n  `,\n  Container: styled.div`\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    width: ${props => props.isMobile ? '90%' : '684px'};\n    padding: ${props => props.theme.spacings.xl};\n    border-radius: 5px;\n    z-index: 9999;\n    max-height: 90vh;\n    background-color: ${props => props.theme.colors.white};\n    transition: all 0.5s;\n    overflow: scroll;\n  `,\n  Content: styled.div`\n    padding: ${props => props.theme.spacings.m};\n  `,\n  Shim: styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 1000;\n    opacity: 0.4;\n    background-color: ${props => props.theme.colors.black90};\n  `\n};\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/chhavikhandelwal/Desktop/Test/Flexcavo/telematic-dashboard/src/components/Modal.tsx"],"names":["React","styled","Modal","props","children","onClose","isMobile","Styled","ModalBox","div","Container","theme","spacings","xl","colors","white","Content","m","Shim","black90"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAQA,MAAMC,KAAsB,GAAIC,KAAD,IAAkB;AAC/C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAkCH,KAAxC;AAEA,sBACE,QAAC,MAAD,CAAQ,QAAR;AAAA,4BACE,QAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,OAAO,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,QAAQ,EAAEC,QAA5B;AAAA,6BACE,QAAC,MAAD,CAAQ,OAAR;AAAA,kBAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;KAAMF,K;AAaN,MAAMK,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAEP,MAAM,CAACQ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXe;AAYbC,EAAAA,SAAS,EAAET,MAAM,CAACQ,GAAW;AAC/B;AACA;AACA;AACA,aAAcN,KAAD,IAAYA,KAAK,CAACG,QAAN,GAAiB,KAAjB,GAAyB,OAAS;AAC3D,eAAgBH,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYC,QAAZ,CAAqBC,EAAG;AAClD;AACA;AACA;AACA,wBAAyBV,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYG,MAAZ,CAAmBC,KAAM;AAC5D;AACA;AACA,GAxBe;AAyBbC,EAAAA,OAAO,EAAEf,MAAM,CAACQ,GAAI;AACtB,eAAgBN,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYC,QAAZ,CAAqBK,CAAE;AACjD,GA3Be;AA4BbC,EAAAA,IAAI,EAAEjB,MAAM,CAACQ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAyBN,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYG,MAAZ,CAAmBK,OAAQ;AAC9D;AArCe,CAAf;AAwCA,eAAejB,KAAf","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport type Props = {\n  children: React.ReactNode;\n  onClose?: () => void;\n  isMobile?: boolean;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst Modal: React.FC<Props> = (props: Props) => {\n  const { children, onClose, isMobile } = props;\n\n  return (\n    <Styled.ModalBox>\n      <Styled.Shim onClick={onClose} />\n      <Styled.Container isMobile={isMobile}>\n        <Styled.Content>{children}</Styled.Content>\n      </Styled.Container>\n    </Styled.ModalBox>\n  );\n};\n\nconst Styled = {\n  ModalBox: styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n  `,\n  Container: styled.div<Props>`\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    width: ${(props) => (props.isMobile ? '90%' : '684px')};\n    padding: ${(props) => props.theme.spacings.xl};\n    border-radius: 5px;\n    z-index: 9999;\n    max-height: 90vh;\n    background-color: ${(props) => props.theme.colors.white};\n    transition: all 0.5s;\n    overflow: scroll;\n  `,\n  Content: styled.div`\n    padding: ${(props) => props.theme.spacings.m};\n  `,\n  Shim: styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 1000;\n    opacity: 0.4;\n    background-color: ${(props) => props.theme.colors.black90};\n  `,\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}